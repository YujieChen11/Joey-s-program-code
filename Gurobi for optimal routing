#include <iostream>
#include <fstream>
#include<set>
#include<utility>
#include<algorithm>
#include<string>
#include "gurobi_c++.h"
using namespace std;
int main() {

	int item;

	fstream fin;
	fin.open("C:/Users/User/Desktop/param.txt", ios::in);
	if (!fin) {
		cerr << "Can't open file!\n";
		system("pause");
		exit(1);
	}
	else
		cout << "File open successfully!\n";

	int v;
	fin >> v;

	/*Sets*/
	set<int> V;
	for (int i = 0; i <= v + 1; i++) {
		V.insert(i);
	}

	set<pair<int, int> > A;
	for (int i = 0; i <= v; i++) {
		for (int j = 1; j <= v + 1; j++) {
			if (i != j && !(i == 0 && j == 6))//
				A.insert(make_pair(i, j));
		}
	}

	set<int> C1;
	for (int i = 0; i <= v + 1; i++) {
		fin >> item;
		if (item)
			C1.insert(i);
	}

	set<int> C2;
	for (int i = 0; i <= v + 1; i++) {
		fin >> item;
		if (item)
			C2.insert(i);
	}

	set<int> C;
	for (int i = 1; i <= v; i++) {
		C.insert(i);
	}

	set<int> V1;
	set_difference(C.begin(), C.end(), C2.begin(), C2.end(), inserter(V1, V1.end()));
	V1.insert(0);
	V1.insert(v + 1);


	set<int> V2 = V;

	set<pair<int, int> > A1;
	for (auto& i : A) {
		if (C2.find(i.first) == C2.end() && C2.find(i.second) == C2.end() && i.first != v + 1)
			A1.insert(i);
	}

	set<pair<int, int> > A2 = A;

	set<int> deltaPlus1[7], deltaMinus1[7];
	for (auto& i : A1) {
		deltaPlus1[i.first].insert(i.second);
		deltaMinus1[i.second].insert(i.first);
	}

	set<int> deltaPlus2[7], deltaMinus2[7];
	for (auto& i : A2) {
		deltaPlus2[i.first].insert(i.second);
		deltaMinus2[i.second].insert(i.first);
	}

	/*Parameters*/
	double d[7][7], r[7][7], c[7][7], e[7][7];
	int s1[7] = { 0 }, s2[7] = { 0 }, a[7], b[7], T, M;
	double item2;

	for (int i = 0; i <= v + 1; i++) {
		for (int j = 0; j <= v + 1; j++) {
			fin >> item2;
			d[i][j] = item2;
			r[i][j] = item2;
			c[i][j] = item2;
			e[i][j] = item2;
		}
	}

	

	system("pause");
	return 0;
}
